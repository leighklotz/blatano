// From https://gitlab.com/mschmidl/covidsniffer/-/blob/master/main/app_main.c

static esp_ble_scan_params_t ble_scan_params = {
						//    .scan_type              = BLE_SCAN_TYPE_ACTIVE,
    .own_addr_type          = BLE_ADDR_TYPE_PUBLIC,
    .scan_filter_policy     = BLE_SCAN_FILTER_ALLOW_ALL,
    .scan_interval          = 0x50,
    .scan_window            = 0x30,
    .scan_duplicate         = BLE_SCAN_DUPLICATE_DISABLE
};






esp_log_buffer_hex("Beacon:", scan_result, sizeof(esp_ble_gap_cb_param_t));
esp_log_buffer_hex("   ADV:", scan_result->scan_rst.ble_adv, scan_result->scan_rst.adv_data_len);

if (scan_result->scan_rst.adv_data_len >= 16) {
  if ((scan_result->scan_rst.ble_adv[2] == 0x6F) && (scan_result->scan_rst.ble_adv[3] == 0xFD)) {
    ESP_LOGI(__func__, "---- androidCovidApp Beacon ----");
    beaconType = android;

  }
  if ((scan_result->scan_rst.ble_adv[5] == 0x6F) && (scan_result->scan_rst.ble_adv[6] == 0xFD)) {
    ESP_LOGI(__func__, "---- apple Beacon ----");
    beaconType = apple;
  }
 }

 if (beaconType != unknown) {
   esp_log_buffer_hex("Addr:", scan_result->scan_rst.bda, ESP_BD_ADDR_LEN);
   esp_log_buffer_hex("Data: ", scan_result->scan_rst.ble_adv, scan_result->scan_rst.adv_data_len);
   gotNewAddr(scan_result->scan_rst.bda, beaconType);
 }

